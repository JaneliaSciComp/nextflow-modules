params {
    global_fix = 'mylocal/bigstream-testdata/fix.n5'
    global_fix_subpath = 'lowres'
    global_mov = 'mylocal/bigstream-testdata/mov.n5'
    global_mov_subpath = 'lowres'
    global_fix_mask = ''
    global_fix_mask_subpath = ''
    global_mov_mask = ''
    global_mov_mask_subpath = ''
    global_steps = 'ransac,affine'
    global_output = 'mylocal/bigstream-testdata-results/aff'
    global_transform_name = ''
    global_align_name = 'affine.n5'
    local_fix = 'mylocal/bigstream-testdata/fix.n5'
    local_fix_subpath = 'highres'
    local_mov = 'mylocal/bigstream-testdata/mov.n5'
    local_mov_subpath = 'highres'
    local_fix_mask = ''
    local_fix_mask_subpath = ''
    local_mov_mask = ''
    local_mov_mask_subpath = ''
    local_steps = 'ransac,deform'
    local_output = 'mylocal/bigstream-testdata-results'
    local_transform_name = 'deform.n5'
    local_transform_subpath = ''
    local_inv_transform_name = 'inv-deform.n5'
    local_inv_transform_subpath = ''
    local_align_name = 'warped.n5'
    with_dask = true
    dask_work_dir = 'work/dask'
    dask_config = './tests/subworkflows/janelia/bigstream_registration/dask_config.yml'
    global_align_cpus = 1
    global_align_mem_gb = 15
    local_align_cpus = 1
    local_align_mem_gb = 5
    local_align_workers = 1
    local_align_min_workers = 1
    local_align_worker_cpus = 1.5
    local_align_worker_mem_gb = 10

    // parameters for global alignment
    global_blocksize = '128,128,128' // output block size for global volume
    global_use_existing_affine_if_found = true
    global_ransac_spot_detection_method = 'log' // laplacian of gaussian
    global_ransac_num_sigma_max = 7
    global_ransac_cc_radius = 12
    global_ransac_nspots = 5000
    global_ransac_diagonal_constraint = 0.75
    global_ransac_match_threshold = 0.6
    global_ransac_align_threshold = 2.0
    global_ransac_fix_spot_detection_threshold = 0.001
    global_ransac_fix_spot_detection_threshold_rel = 0.05
    global_ransac_fix_spot_winsorize_limits = '0.5,0.2'
    global_ransac_mov_spot_detection_threshold = 0.001
    global_ransac_mov_spot_detection_threshold_rel = 0.05
    global_ransac_mov_spot_winsorize_limits = '0.5,0.2'
    global_ransac_blob_sizes = '6,20'
    global_ransac_fix_spots_count_threshold = 100
    global_ransac_mov_spots_count_threshold = 100
    global_ransac_point_matches_threshold = 50
    global_shrink_factors = '2'
    global_smooth_sigmas = 2.5
    global_learning_rate = 0.25
    global_min_step = 0
    global_iterations = 100
    global_metric =  ''
    global_optimizer =  ''
    global_sampling =  ''
    global_interpolator =  ''
    global_sampling_percentage =  ''
    global_alignment_spacing =  ''

    // parameters for global alignment
    local_overlap_factor = 0.5
    local_blocksize = '64,64,64'  // output block (chunk) size for zarr or N5 arrays
    local_transform_blocksize = '64,64,64'  // output block (chunk) size for local deformation
    local_ransac_spot_detection_method = 'log'  // difference of gaussian
    local_ransac_num_sigma_max = 7
    local_ransac_cc_radius = 12
    local_ransac_nspots = 5000
    local_ransac_diagonal_constraint = 0.75
    local_ransac_match_threshold = 0.6
    local_ransac_align_threshold = 2
    local_ransac_fix_spot_detection_threshold = 0.0001
    local_ransac_fix_spot_detection_threshold_rel = 0.01
    local_ransac_fix_spot_winsorize_limits = '0.5,0.2'
    local_ransac_mov_spot_detection_threshold = 0.0001
    local_ransac_mov_spot_detection_threshold_rel = 0.01
    local_ransac_mov_spot_winsorize_limits = '0.5,0.2'
    local_ransac_blob_sizes = '6,20'
    local_ransac_fix_spots_count_threshold = 100
    local_ransac_mov_spots_count_threshold = 100
    local_ransac_point_matches_threshold = 50
    local_control_point_spacing = 50
    control_point_levels = '1'
    local_smooth_sigmas = 0.25
    local_learning_rate = 0.25
    local_min_step = 0
    local_iterations = 1
    local_metric = ''
    local_optimizer = ''
    local_sampling = ''
    local_interpolator = ''
    local_sampling_percentage = ''
    local_alignment_spacing = ''

    additional_warped_channel = 'c0'
    additional_warped_scale = 's2'

    inv_iterations = 1
    inv_order = 2
    inv_sqrt_iterations = 1
    cluster_max_tasks = 4
}

process {
    ext.container = 'janeliascicomp/bigstream:1.2.9-dask2023.10.1-py11'
    containerOptions = '--platform linux/arm64'

    withName:BIGSTREAM_GLOBAL_ALIGN {
        ext {
            args = [
                "--output-blocksize ${params.global_blocksize}",
                "${params.global_use_existing_affine_if_found ? '--use-existing-global-transform' : ''}",
                "--global-ransac-spot-detection-method ${params.global_ransac_spot_detection_method}",
                "--global-shrink-factors ${params.global_shrink_factors}",
                "--global-ransac-num-sigma-max ${params.global_ransac_num_sigma_max}",
                "--global-ransac-cc-radius ${params.global_ransac_cc_radius}",
                "--global-ransac-nspots ${params.global_ransac_nspots}",
                "--global-ransac-diagonal-constraint ${params.global_ransac_diagonal_constraint}",
                "--global-ransac-match-threshold ${params.global_ransac_match_threshold}",
                "--global-ransac-align-threshold ${params.global_ransac_align_threshold}",
                "--global-ransac-fix-spot-detection-threshold ${params.global_ransac_fix_spot_detection_threshold}",
                "--global-ransac-fix-spot-detection-threshold-rel ${params.global_ransac_fix_spot_detection_threshold_rel}",
                "${params.global_ransac_fix_spot_winsorize_limits ? '--global-ransac-fix-spot-winsorize-limits ' + params.global_ransac_fix_spot_winsorize_limits : ''}",
                "--global-ransac-mov-spot-detection-threshold ${params.global_ransac_mov_spot_detection_threshold}",
                "--global-ransac-mov-spot-detection-threshold-rel ${params.global_ransac_mov_spot_detection_threshold_rel}",
                "${params.global_ransac_mov_spot_winsorize_limits ? '--global-ransac-mov-spot-winsorize-limits ' + params.global_ransac_mov_spot_winsorize_limits : ''}",
                "--global-ransac-blob-sizes ${params.global_ransac_blob_sizes}",
                "--global-ransac-fix-spots-count-threshold ${params.global_ransac_fix_spots_count_threshold}",
                "--global-ransac-mov-spots-count-threshold ${params.global_ransac_mov_spots_count_threshold}",
                "--global-ransac-point-matches-threshold ${params.global_ransac_point_matches_threshold}",
                "--global-smooth-sigmas ${params.global_smooth_sigmas}",
                "--global-learning-rate ${params.global_learning_rate}",
                "--global-iterations ${params.global_iterations}",
                "${params.global_metric ? '--global-metric ' + params.global_metric : ''}",
                "${params.global_optimizer ? '--global-optimizer ' + params.global_optimizer : ''}",
                "${params.global_sampling ? '--global-sampling ' + params.global_sampling : ''}",
                "${params.global_interpolator ? '--global-interpolator ' + params.global_interpolator : ''}",
                "${params.global_sampling_percentage ? '--global-sampling-percentage ' + params.global_sampling_percentage : ''}",
                "${params.global_alignment_spacing ? '--global-alignment-spacing ' + params.global_alignment_spacing : ''}",
            ].join(' ')
        }
    }

    withName:BIGSTREAM_LOCAL_ALIGN {
        ext {
            args = [
                "--output-blocksize ${params.global_blocksize}",
                "--local-ransac-spot-detection-method ${params.local_ransac_spot_detection_method}",
                "--local-ransac-num-sigma-max ${params.local_ransac_num_sigma_max}",
                "--local-ransac-cc-radius ${params.local_ransac_cc_radius}",
                "--local-ransac-nspots ${params.local_ransac_nspots}",
                "--local-ransac-diagonal-constraint ${params.local_ransac_diagonal_constraint}",
                "--local-ransac-match-threshold ${params.local_ransac_match_threshold}",
                "--local-ransac-align-threshold ${params.local_ransac_align_threshold}",
                "--local-ransac-fix-spot-detection-threshold ${params.local_ransac_fix_spot_detection_threshold}",
                "--local-ransac-fix-spot-detection-threshold-rel ${params.local_ransac_fix_spot_detection_threshold_rel}",
                "${params.local_ransac_fix_spot_winsorize_limits ? '--local-ransac-fix-spot-winsorize-limits ' + params.local_ransac_fix_spot_winsorize_limits : ''}",
                "--local-ransac-mov-spot-detection-threshold ${params.local_ransac_mov_spot_detection_threshold}",
                "--local-ransac-mov-spot-detection-threshold-rel ${params.local_ransac_mov_spot_detection_threshold_rel}",
                "${params.local_ransac_mov_spot_winsorize_limits ? '--local-ransac-mov-spot-winsorize-limits ' + params.local_ransac_mov_spot_winsorize_limits : ''}",
                "--local-ransac-blob-sizes ${params.local_ransac_blob_sizes}",
                "--local-ransac-fix-spots-count-threshold ${params.local_ransac_fix_spots_count_threshold}",
                "--local-ransac-mov-spots-count-threshold ${params.local_ransac_mov_spots_count_threshold}",
                "--local-ransac-point-matches-threshold ${params.local_ransac_point_matches_threshold}",
                "--local-smooth-sigmas ${params.local_smooth_sigmas}",
                "--local-learning-rate ${params.local_learning_rate}",
                "--local-iterations ${params.local_iterations}",
                "--local-transform-blocksize ${params.local_transform_blocksize}",
                "${params.local_metric ? '--local-metric ' + params.local_metric : ''}",
                "${params.local_optimizer ? '--local-optimizer ' + params.local_optimizer : ''}",
                "${params.local_sampling ? '--local-sampling ' + params.local_sampling : ''}",
                "${params.local_interpolator ? '--local-interpolator ' + params.local_interpolator : ''}",
                "${params.local_sampling_percentage ? '--local-sampling-percentage ' + params.local_sampling_percentage : ''}",
                "${params.local_alignment_spacing ? '--local-alignment-spacing ' + params.local_alignment_spacing : ''}",
                "--inv-iterations ${params.inv_iterations}",
                "--inv-order ${params.inv_order}",
                "--inv-sqrt-iterations ${params.inv_sqrt_iterations}",
                "--cluster-max-tasks ${params.cluster_max_tasks}"
            ].join(' ')
        }
    }


}

profiles {

    docker {
        docker.enabled = true

        process {
            withName:'.*:DASK_STARTMANAGER' {
                cpus = 0.5
                memory = '1 GB'
                containerOptions = '-p 8787:8787 -p 8786:8786'
            }
        }
    }

}