params {
    bigstream_config =  './tests/subworkflows/janelia/bigstream_registration/bigstream_config.yml'
    global_fix = 'mylocal/bigstream-testdata/fix.n5'
    global_fix_subpath = 'lowres'
    global_mov = 'mylocal/bigstream-testdata/mov.n5'
    global_mov_subpath = 'lowres'
    global_fix_mask = ''
    global_fix_mask_subpath = ''
    global_mov_mask = ''
    global_mov_mask_subpath = ''
    global_steps = 'ransac,affine'
    global_output = 'mylocal/bigstream-testdata-results/aff'
    global_transform_name = ''
    global_align_name = 'affine.n5'
    local_fix = 'mylocal/bigstream-testdata/fix.n5'
    local_fix_subpath = 'highres'
    local_mov = 'mylocal/bigstream-testdata/mov.n5'
    local_mov_subpath = 'highres'
    local_fix_mask = ''
    local_fix_mask_subpath = ''
    local_mov_mask = ''
    local_mov_mask_subpath = ''
    local_steps = 'ransac,deform'
    local_output = 'mylocal/bigstream-testdata-results'
    local_transform_name = 'deform.n5'
    local_transform_subpath = ''
    local_inv_transform_name = 'inv-deform.n5'
    local_inv_transform_subpath = ''
    local_align_name = 'warped.n5'
    with_dask = true
    dask_work_dir = 'work/dask'
    dask_config = './tests/subworkflows/janelia/bigstream_registration/dask_config.yml'
    global_align_cpus = 1
    global_align_mem_gb = 15
    local_align_cpus = 1
    local_align_mem_gb = 5
    local_align_workers = 1
    local_align_min_workers = 1
    local_align_worker_cpus = 1.5
    local_align_worker_mem_gb = 10

    // parameters for global alignment
    global_blocksize = '128,128,128' // output block size for global volume
    global_use_existing_affine_if_found = true

    // parameters for global alignment
    local_overlap_factor = 0.5
    local_blocksize = '64,64,64'  // output block (chunk) size for zarr or N5 arrays
    local_transform_blocksize = '64,64,64'  // output block (chunk) size for local deformation

    additional_warped_channel = 'c0'
    additional_warped_scale = 's2'

    inv_iterations = 1
    inv_order = 2
    inv_sqrt_iterations = 1
    cluster_max_tasks = 4
}

process {
    ext.container = 'janeliascicomp/bigstream:1.2.9-dask2024.4.1-py11'
    containerOptions = '--platform linux/arm64'

    withName:BIGSTREAM_GLOBALALIGN {
        ext {
            args = [
                "${params.global_use_existing_affine_if_found ? '--global-use-existing-transform' : ''}",
                "--global-align-blocksize ${params.global_blocksize}",
            ].join(' ')
        }
    }

    withName:BIGSTREAM_LOCALALIGN {
        ext {
            args = [
                "--local-processing-size ${params.local_blocksize}",
                "--local-processing-overlap-factor ${params.local_overlap_factor}",
                "--local-align-blocksize ${params.local_blocksize}",
                "--inv-iterations ${params.inv_iterations}",
                "--inv-order ${params.inv_order}",
                "--inv-sqrt-iterations ${params.inv_sqrt_iterations}",
                "--cluster-max-tasks ${params.cluster_max_tasks}"
            ].join(' ')
        }
    }


}

profiles {

    docker {
        docker.enabled = true

        process {
            withName:'.*:DASK_STARTMANAGER' {
                cpus = 0.5
                memory = '1 GB'
                containerOptions = '-p 8787:8787 -p 8786:8786'
            }
        }
    }

}